"0","# replace the character string here with the correction column you want to use"
"0","col_for_disc <- ""lin""  # options to substitute in here are: ""offset"" or ""drift"" or  ""lin"" or  ""lindrift"""
"0","# resulting formulas "
"0","col_in_C.stds.table <- paste0(col_for_disc, ""C.mean"")"
"0","col_in_data <- paste0(""d13C."", col_for_disc)"
"0","col_for_disc_mean_eq <- list(col_for_disc = lazyeval::interp(~var, var = as.name(col_in_C.stds.table)))"
"0","correction_eq <- list(d13C.disc = lazyeval::interp(~disc.slopeC * var + disc.interC, var = as.name(col_in_data)))"
"0","# safety checks"
"0","if (!col_in_C.stds.table %in% names(C.stds.table)) stop(""this column does not exist in C.stds.table: "", col_in_C.stds.table, call. = FALSE)"
"0","if (!col_in_data %in% names(data)) stop(""this column does not exist in data or stds table: "", col_in_data, call. = FALSE)"
"0","disc.slopeC<-(coef(m)[[2]])"
"0","disc.interC<-(coef(m)[[1]])"
"0","R2 <- summary(m)$r.squared"
"0","# apply correction"
"0","data <- mutate_(data, .dots = correction_eq)"
"0","stds <- mutate_(stds, .dots = correction_eq)"
"0","C.disc.all <- "
"0","  ggplot(C.stds.table, aes_string(x=col_in_C.stds.table, y=""C.acc"")) +"
"0","  geom_smooth(method=""lm"", color = ""blue"") +"
"0","  geom_point(data=data, aes_string(x=col_in_data, y=""d13C.disc""), shape=23, fill=""red"", size = 2) +"
"0","  geom_text("
"0","           x = min(C.stds.table[[col_in_C.stds.table]]), "
"0","           y = max(C.stds.table$C.acc), "
"0","           label = str_interp(""C.acc = $[.2f]{slope} ${var} + $[.2f]{intercept} (R2: $[.4f]{R2})"", "
"0","                              list(slope = disc.slopeC, intercept = disc.interC, var = col_for_disc, R2 = R2)),"
"0","           size = 4, hjust=0, vjust=0, colour=""blue"") +"
"0","  labs(x = col_for_disc)"
"0","C.disc.all"
